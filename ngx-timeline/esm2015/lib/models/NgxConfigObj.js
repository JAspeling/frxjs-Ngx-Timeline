export let supportedLanguageCodes = ['en', 'it', 'fr', 'de', 'es'];
export let dateConfigMap = {
    en: {
        code: 'en-US',
        fullDate: 'MM/dd/yyyy h:mm a',
        dayMonthYear: 'dd MMMM yyyy',
        monthYear: 'MMMM yyyy',
        year: 'yyyy',
        hoursMinutes: 'hh:mm a'
    },
    it: {
        code: 'it-IT',
        fullDate: 'dd/MM/yyyy H:mm',
        dayMonthYear: 'dd MMMM yyyy',
        monthYear: 'MMMM yyyy',
        year: 'yyyy',
        hoursMinutes: 'HH:mm'
    },
    fr: {
        code: 'fr-FR',
        fullDate: 'dd/MM/yyyy H:mm',
        dayMonthYear: 'dd MMMM yyyy',
        monthYear: 'MMMM yyyy',
        year: 'yyyy',
        hoursMinutes: 'HH:mm'
    },
    de: {
        code: 'de',
        fullDate: 'dd/MM/yyyy H:mm',
        dayMonthYear: 'dd MMMM yyyy',
        monthYear: 'MMMM yyyy',
        year: 'yyyy',
        hoursMinutes: 'HH:mm'
    },
    es: {
        code: 'es',
        fullDate: 'dd/MM/yyyy H:mm',
        dayMonthYear: 'dd MMMM yyyy',
        monthYear: 'MMMM yyyy',
        year: 'yyyy',
        hoursMinutes: 'HH:mm'
    }
};
export var NgxDateFormat;
(function (NgxDateFormat) {
    NgxDateFormat["DAY_MONTH_YEAR"] = "DAY_MONTH_YEAR";
    NgxDateFormat["FULL_DATE"] = "FULL_DATE";
    NgxDateFormat["MONTH_YEAR"] = "MONTH_YEAR";
    NgxDateFormat["HOURS_MINUTES"] = "HOURS_MINUTES";
    NgxDateFormat["YEAR"] = "YEAR";
})(NgxDateFormat || (NgxDateFormat = {}));
export let fieldConfigDate = {
    MONTH_YEAR: 'monthYear',
    YEAR: 'year',
    HOURS_MINUTES: 'hoursMinutes',
    FULL_DATE: 'fullDate',
    DAY_MONTH_YEAR: 'dayMonthYear'
};
/**
 * Enum used to set the group event logic
 */
export var NgxTimelineEventGroup;
(function (NgxTimelineEventGroup) {
    NgxTimelineEventGroup["YEAR"] = "YEAR";
    NgxTimelineEventGroup["MONTH_YEAR"] = "MONTH_YEAR";
    NgxTimelineEventGroup["DAY_MONTH_YEAR"] = "DAY_MONTH_YEAR";
})(NgxTimelineEventGroup || (NgxTimelineEventGroup = {}));
export let fieldsToAddEventGroup = {
    YEAR: ['getFullYear'],
    MONTH_YEAR: ['getFullYear', 'getMonth'],
    DAY_MONTH_YEAR: ['getFullYear', 'getMonth', 'getDate']
};
export let periodKeyDateFormat = {
    YEAR: NgxDateFormat.YEAR,
    MONTH_YEAR: NgxDateFormat.MONTH_YEAR,
    DAY_MONTH_YEAR: NgxDateFormat.DAY_MONTH_YEAR,
};
/**
 * Enum used to set the change side event logic
 */
export var NgxTimelineEventChangeSideInGroup;
(function (NgxTimelineEventChangeSideInGroup) {
    NgxTimelineEventChangeSideInGroup["ALL"] = "ALL";
    NgxTimelineEventChangeSideInGroup["ON_DIFFERENT_HMS"] = "ON_DIFFERENT_HMS";
    NgxTimelineEventChangeSideInGroup["ON_DIFFERENT_DAY"] = "ON_DIFFERENT_DAY";
    NgxTimelineEventChangeSideInGroup["ON_DIFFERENT_MONTH"] = "ON_DIFFERENT_MONTH";
})(NgxTimelineEventChangeSideInGroup || (NgxTimelineEventChangeSideInGroup = {}));
export let fieldsToCheckEventChangeSideInGroup = {
    ON_DIFFERENT_MONTH: ['getFullYear', 'getMonth'],
    ON_DIFFERENT_DAY: ['getFullYear', 'getMonth', 'getDate'],
    ON_DIFFERENT_HMS: ['getFullYear', 'getMonth', 'getDate', 'getHours', 'getMinutes', 'getSeconds']
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmd4Q29uZmlnT2JqLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXRpbWVsaW5lL3NyYy9saWIvbW9kZWxzL05neENvbmZpZ09iai50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsSUFBSSxzQkFBc0IsR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQWVuRSxNQUFNLENBQUMsSUFBSSxhQUFhLEdBQWtCO0lBQ3hDLEVBQUUsRUFBRTtRQUNGLElBQUksRUFBRSxPQUFPO1FBQ2IsUUFBUSxFQUFFLG1CQUFtQjtRQUM3QixZQUFZLEVBQUUsY0FBYztRQUM1QixTQUFTLEVBQUUsV0FBVztRQUN0QixJQUFJLEVBQUUsTUFBTTtRQUNaLFlBQVksRUFBRSxTQUFTO0tBQ3hCO0lBQ0QsRUFBRSxFQUFFO1FBQ0YsSUFBSSxFQUFFLE9BQU87UUFDYixRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLFlBQVksRUFBRSxjQUFjO1FBQzVCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLElBQUksRUFBRSxNQUFNO1FBQ1osWUFBWSxFQUFFLE9BQU87S0FDdEI7SUFDRCxFQUFFLEVBQUU7UUFDRixJQUFJLEVBQUUsT0FBTztRQUNiLFFBQVEsRUFBRSxpQkFBaUI7UUFDM0IsWUFBWSxFQUFFLGNBQWM7UUFDNUIsU0FBUyxFQUFFLFdBQVc7UUFDdEIsSUFBSSxFQUFFLE1BQU07UUFDWixZQUFZLEVBQUUsT0FBTztLQUN0QjtJQUNELEVBQUUsRUFBRTtRQUNGLElBQUksRUFBRSxJQUFJO1FBQ1YsUUFBUSxFQUFFLGlCQUFpQjtRQUMzQixZQUFZLEVBQUUsY0FBYztRQUM1QixTQUFTLEVBQUUsV0FBVztRQUN0QixJQUFJLEVBQUUsTUFBTTtRQUNaLFlBQVksRUFBRSxPQUFPO0tBQ3RCO0lBQ0QsRUFBRSxFQUFFO1FBQ0YsSUFBSSxFQUFFLElBQUk7UUFDVixRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLFlBQVksRUFBRSxjQUFjO1FBQzVCLFNBQVMsRUFBRSxXQUFXO1FBQ3RCLElBQUksRUFBRSxNQUFNO1FBQ1osWUFBWSxFQUFFLE9BQU87S0FDdEI7Q0FDRixDQUFDO0FBRUYsTUFBTSxDQUFOLElBQVksYUFNWDtBQU5ELFdBQVksYUFBYTtJQUN2QixrREFBa0MsQ0FBQTtJQUNsQyx3Q0FBd0IsQ0FBQTtJQUN4QiwwQ0FBMEIsQ0FBQTtJQUMxQixnREFBK0IsQ0FBQTtJQUMvQiw4QkFBYyxDQUFBO0FBQ2hCLENBQUMsRUFOVyxhQUFhLEtBQWIsYUFBYSxRQU14QjtBQUVELE1BQU0sQ0FBQyxJQUFJLGVBQWUsR0FBRztJQUMzQixVQUFVLEVBQUUsV0FBVztJQUN2QixJQUFJLEVBQUUsTUFBTTtJQUNaLGFBQWEsRUFBRSxjQUFjO0lBQzdCLFNBQVMsRUFBRSxVQUFVO0lBQ3JCLGNBQWMsRUFBRSxjQUFjO0NBQy9CLENBQUE7QUFFRDs7R0FFRztBQUNILE1BQU0sQ0FBTixJQUFZLHFCQUlYO0FBSkQsV0FBWSxxQkFBcUI7SUFDL0Isc0NBQWEsQ0FBQTtJQUNiLGtEQUF5QixDQUFBO0lBQ3pCLDBEQUFpQyxDQUFBO0FBQ25DLENBQUMsRUFKVyxxQkFBcUIsS0FBckIscUJBQXFCLFFBSWhDO0FBRUQsTUFBTSxDQUFDLElBQUkscUJBQXFCLEdBQUc7SUFDakMsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDO0lBQ3JCLFVBQVUsRUFBRSxDQUFDLGFBQWEsRUFBRSxVQUFVLENBQUM7SUFDdkMsY0FBYyxFQUFFLENBQUMsYUFBYSxFQUFFLFVBQVUsRUFBRSxTQUFTLENBQUM7Q0FDdkQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFJLG1CQUFtQixHQUFHO0lBQy9CLElBQUksRUFBRSxhQUFhLENBQUMsSUFBSTtJQUN4QixVQUFVLEVBQUUsYUFBYSxDQUFDLFVBQVU7SUFDcEMsY0FBYyxFQUFFLGFBQWEsQ0FBQyxjQUFjO0NBQzdDLENBQUM7QUFFRjs7R0FFRztBQUNILE1BQU0sQ0FBTixJQUFZLGlDQUtYO0FBTEQsV0FBWSxpQ0FBaUM7SUFDM0MsZ0RBQVcsQ0FBQTtJQUNYLDBFQUFxQyxDQUFBO0lBQ3JDLDBFQUFxQyxDQUFBO0lBQ3JDLDhFQUF5QyxDQUFBO0FBQzNDLENBQUMsRUFMVyxpQ0FBaUMsS0FBakMsaUNBQWlDLFFBSzVDO0FBRUQsTUFBTSxDQUFDLElBQUksbUNBQW1DLEdBQUc7SUFDL0Msa0JBQWtCLEVBQUUsQ0FBQyxhQUFhLEVBQUUsVUFBVSxDQUFDO0lBQy9DLGdCQUFnQixFQUFFLENBQUMsYUFBYSxFQUFFLFVBQVUsRUFBRSxTQUFTLENBQUM7SUFDeEQsZ0JBQWdCLEVBQUUsQ0FBQyxhQUFhLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQztDQUNqRyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGxldCBzdXBwb3J0ZWRMYW5ndWFnZUNvZGVzID0gWydlbicsICdpdCcsICdmcicsICdkZScsICdlcyddO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBOZ3hDb25maWdEYXRlIHtcclxuICBjb2RlOiBzdHJpbmc7XHJcbiAgZGF5TW9udGhZZWFyOiBzdHJpbmc7XHJcbiAgZnVsbERhdGU6IHN0cmluZztcclxuICBob3Vyc01pbnV0ZXM6IHN0cmluZztcclxuICBtb250aFllYXI6IHN0cmluZztcclxuICB5ZWFyOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTmd4RGF0ZU9iak1hcCB7XHJcbiAgW2tleTogc3RyaW5nXTogTmd4Q29uZmlnRGF0ZTtcclxufVxyXG5cclxuZXhwb3J0IGxldCBkYXRlQ29uZmlnTWFwOiBOZ3hEYXRlT2JqTWFwID0ge1xyXG4gIGVuOiB7XHJcbiAgICBjb2RlOiAnZW4tVVMnLFxyXG4gICAgZnVsbERhdGU6ICdNTS9kZC95eXl5IGg6bW0gYScsXHJcbiAgICBkYXlNb250aFllYXI6ICdkZCBNTU1NIHl5eXknLFxyXG4gICAgbW9udGhZZWFyOiAnTU1NTSB5eXl5JyxcclxuICAgIHllYXI6ICd5eXl5JyxcclxuICAgIGhvdXJzTWludXRlczogJ2hoOm1tIGEnXHJcbiAgfSxcclxuICBpdDoge1xyXG4gICAgY29kZTogJ2l0LUlUJyxcclxuICAgIGZ1bGxEYXRlOiAnZGQvTU0veXl5eSBIOm1tJyxcclxuICAgIGRheU1vbnRoWWVhcjogJ2RkIE1NTU0geXl5eScsXHJcbiAgICBtb250aFllYXI6ICdNTU1NIHl5eXknLFxyXG4gICAgeWVhcjogJ3l5eXknLFxyXG4gICAgaG91cnNNaW51dGVzOiAnSEg6bW0nXHJcbiAgfSxcclxuICBmcjoge1xyXG4gICAgY29kZTogJ2ZyLUZSJyxcclxuICAgIGZ1bGxEYXRlOiAnZGQvTU0veXl5eSBIOm1tJyxcclxuICAgIGRheU1vbnRoWWVhcjogJ2RkIE1NTU0geXl5eScsXHJcbiAgICBtb250aFllYXI6ICdNTU1NIHl5eXknLFxyXG4gICAgeWVhcjogJ3l5eXknLFxyXG4gICAgaG91cnNNaW51dGVzOiAnSEg6bW0nXHJcbiAgfSxcclxuICBkZToge1xyXG4gICAgY29kZTogJ2RlJyxcclxuICAgIGZ1bGxEYXRlOiAnZGQvTU0veXl5eSBIOm1tJyxcclxuICAgIGRheU1vbnRoWWVhcjogJ2RkIE1NTU0geXl5eScsXHJcbiAgICBtb250aFllYXI6ICdNTU1NIHl5eXknLFxyXG4gICAgeWVhcjogJ3l5eXknLFxyXG4gICAgaG91cnNNaW51dGVzOiAnSEg6bW0nXHJcbiAgfSxcclxuICBlczoge1xyXG4gICAgY29kZTogJ2VzJyxcclxuICAgIGZ1bGxEYXRlOiAnZGQvTU0veXl5eSBIOm1tJyxcclxuICAgIGRheU1vbnRoWWVhcjogJ2RkIE1NTU0geXl5eScsXHJcbiAgICBtb250aFllYXI6ICdNTU1NIHl5eXknLFxyXG4gICAgeWVhcjogJ3l5eXknLFxyXG4gICAgaG91cnNNaW51dGVzOiAnSEg6bW0nXHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGVudW0gTmd4RGF0ZUZvcm1hdCB7XHJcbiAgREFZX01PTlRIX1lFQVIgID0gJ0RBWV9NT05USF9ZRUFSJyxcclxuICBGVUxMX0RBVEUgID0gJ0ZVTExfREFURScsXHJcbiAgTU9OVEhfWUVBUiAgPSAnTU9OVEhfWUVBUicsXHJcbiAgSE9VUlNfTUlOVVRFUyA9ICdIT1VSU19NSU5VVEVTJyxcclxuICBZRUFSICA9ICdZRUFSJ1xyXG59XHJcblxyXG5leHBvcnQgbGV0IGZpZWxkQ29uZmlnRGF0ZSA9IHtcclxuICBNT05USF9ZRUFSOiAnbW9udGhZZWFyJyxcclxuICBZRUFSOiAneWVhcicsXHJcbiAgSE9VUlNfTUlOVVRFUzogJ2hvdXJzTWludXRlcycsXHJcbiAgRlVMTF9EQVRFOiAnZnVsbERhdGUnLFxyXG4gIERBWV9NT05USF9ZRUFSOiAnZGF5TW9udGhZZWFyJ1xyXG59XHJcblxyXG4vKipcclxuICogRW51bSB1c2VkIHRvIHNldCB0aGUgZ3JvdXAgZXZlbnQgbG9naWNcclxuICovXHJcbmV4cG9ydCBlbnVtIE5neFRpbWVsaW5lRXZlbnRHcm91cCB7XHJcbiAgWUVBUiA9ICdZRUFSJyxcclxuICBNT05USF9ZRUFSID0gJ01PTlRIX1lFQVInLFxyXG4gIERBWV9NT05USF9ZRUFSID0gJ0RBWV9NT05USF9ZRUFSJ1xyXG59XHJcblxyXG5leHBvcnQgbGV0IGZpZWxkc1RvQWRkRXZlbnRHcm91cCA9IHtcclxuICBZRUFSOiBbJ2dldEZ1bGxZZWFyJ10sXHJcbiAgTU9OVEhfWUVBUjogWydnZXRGdWxsWWVhcicsICdnZXRNb250aCddLFxyXG4gIERBWV9NT05USF9ZRUFSOiBbJ2dldEZ1bGxZZWFyJywgJ2dldE1vbnRoJywgJ2dldERhdGUnXVxyXG59O1xyXG5cclxuZXhwb3J0IGxldCBwZXJpb2RLZXlEYXRlRm9ybWF0ID0ge1xyXG4gIFlFQVI6IE5neERhdGVGb3JtYXQuWUVBUixcclxuICBNT05USF9ZRUFSOiBOZ3hEYXRlRm9ybWF0Lk1PTlRIX1lFQVIsXHJcbiAgREFZX01PTlRIX1lFQVI6IE5neERhdGVGb3JtYXQuREFZX01PTlRIX1lFQVIsXHJcbn07XHJcblxyXG4vKipcclxuICogRW51bSB1c2VkIHRvIHNldCB0aGUgY2hhbmdlIHNpZGUgZXZlbnQgbG9naWNcclxuICovXHJcbmV4cG9ydCBlbnVtIE5neFRpbWVsaW5lRXZlbnRDaGFuZ2VTaWRlSW5Hcm91cCB7XHJcbiAgQUxMID0gJ0FMTCcsXHJcbiAgT05fRElGRkVSRU5UX0hNUyA9ICdPTl9ESUZGRVJFTlRfSE1TJyxcclxuICBPTl9ESUZGRVJFTlRfREFZID0gJ09OX0RJRkZFUkVOVF9EQVknLFxyXG4gIE9OX0RJRkZFUkVOVF9NT05USCA9ICdPTl9ESUZGRVJFTlRfTU9OVEgnXHJcbn1cclxuXHJcbmV4cG9ydCBsZXQgZmllbGRzVG9DaGVja0V2ZW50Q2hhbmdlU2lkZUluR3JvdXAgPSB7XHJcbiAgT05fRElGRkVSRU5UX01PTlRIOiBbJ2dldEZ1bGxZZWFyJywgJ2dldE1vbnRoJ10sXHJcbiAgT05fRElGRkVSRU5UX0RBWTogWydnZXRGdWxsWWVhcicsICdnZXRNb250aCcsICdnZXREYXRlJ10sXHJcbiAgT05fRElGRkVSRU5UX0hNUzogWydnZXRGdWxsWWVhcicsICdnZXRNb250aCcsICdnZXREYXRlJywgJ2dldEhvdXJzJywgJ2dldE1pbnV0ZXMnLCAnZ2V0U2Vjb25kcyddXHJcbn07XHJcbiJdfQ==