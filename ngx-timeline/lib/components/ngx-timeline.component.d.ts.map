{"version":3,"file":"ngx-timeline.component.d.ts","sources":["ngx-timeline.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgxTimelineEvent, NgxTimelineItem, NgxTimelineItemPosition, NgxTimelinePeriodInfo, NgxDateFormat, NgxTimelineEventGroup, NgxTimelineEventChangeSideInGroup } from '../models';\r\nimport { BehaviorSubject } from 'rxjs';\r\nexport declare class NgxTimelineComponent implements OnInit, OnChanges {\r\n    /**\r\n     * List of events to be displayed\r\n     */\r\n    events: NgxTimelineEvent[];\r\n    /**\r\n     * Language code used to show the date formatted\r\n     */\r\n    langCode?: string;\r\n    /**\r\n     * Boolean used to enable or disable the animations\r\n     */\r\n    enableAnimation: boolean;\r\n    /**\r\n     * Logic to be applied in order to group events\r\n     */\r\n    groupEvent?: NgxTimelineEventGroup;\r\n    /**\r\n     * Logic to be applied in order to put evetns on LEFT or RIGHT\r\n     */\r\n    changeSideInGroup?: NgxTimelineEventChangeSideInGroup;\r\n    /**\r\n     * Custom Template displayed before a group of events\r\n     */\r\n    periodCustomTemplate: TemplateRef<any>;\r\n    /**\r\n     * Custom Template displayed to show a single event\r\n     */\r\n    eventCustomTemplate: TemplateRef<any>;\r\n    /**\r\n     * Custom Template displayed to show an separator icon\r\n     */\r\n    centerIconCustomTemplate: TemplateRef<any>;\r\n    /**\r\n     * Custom Template displayed to show the side date\r\n     */\r\n    dateInstantCustomTemplate: TemplateRef<any>;\r\n    /**\r\n     * Custom Template displayed to show the inner event\r\n     */\r\n    innerEventCustomTemplate: TemplateRef<any>;\r\n    /**\r\n     * Output click event emitter\r\n     */\r\n    clickEmitter: BehaviorSubject<NgxTimelineItem>;\r\n    groups: {\r\n        [key: string]: NgxTimelineEvent[];\r\n    };\r\n    periods: NgxTimelineItem[];\r\n    items: NgxTimelineItem[];\r\n    ngxTimelineItemPosition: typeof NgxTimelineItemPosition;\r\n    ngxDateFormat: typeof NgxDateFormat;\r\n    private readonly separator;\r\n    constructor();\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    getPeriodKeyDateFormat(): string;\r\n    protected clear(): void;\r\n    protected groupEvents(events: NgxTimelineEvent[]): void;\r\n    protected sortEvents(events: NgxTimelineEvent[]): void;\r\n    protected setGroups(events: NgxTimelineEvent[]): void;\r\n    protected setItems(): void;\r\n    protected addPeriodEvents(periodInfo: NgxTimelinePeriodInfo, onLeft: boolean): void;\r\n    protected pushEventOnItems(event: NgxTimelineEvent, onLeft: boolean): void;\r\n    /**\r\n     * Compare the events inside the same group\r\n     */\r\n    protected compareEvents(prevEvent: NgxTimelineEvent, event: NgxTimelineEvent): boolean;\r\n    protected compareEventsField(prevEvent: NgxTimelineEvent, event: NgxTimelineEvent, ...fields: string[]): boolean;\r\n    protected setPeriods(): void;\r\n    private getPeriodInfo;\r\n    protected getPeriodKeyFromEvent(event: NgxTimelineEvent): string;\r\n}\r\n"]}