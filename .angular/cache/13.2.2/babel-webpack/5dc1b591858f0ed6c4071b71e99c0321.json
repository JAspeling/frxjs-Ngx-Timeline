{"ast":null,"code":"function cov_27q2up6jkf() {\n  var path = \"/Users/emanuele/Documents/PersonalProjects/frxjs-Ngx-Timeline/projects/ngx-timeline/src/lib/models/NgxConfigObj.ts\";\n  var hash = \"b18881cd59a3347dad01721dcbfe0123d2e976a7\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/emanuele/Documents/PersonalProjects/frxjs-Ngx-Timeline/projects/ngx-timeline/src/lib/models/NgxConfigObj.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 1,\n          column: 38\n        },\n        end: {\n          line: 1,\n          column: 68\n        }\n      },\n      \"1\": {\n        start: {\n          line: 2,\n          column: 29\n        },\n        end: {\n          line: 43,\n          column: 1\n        }\n      },\n      \"2\": {\n        start: {\n          line: 45,\n          column: 0\n        },\n        end: {\n          line: 51,\n          column: 42\n        }\n      },\n      \"3\": {\n        start: {\n          line: 46,\n          column: 4\n        },\n        end: {\n          line: 46,\n          column: 55\n        }\n      },\n      \"4\": {\n        start: {\n          line: 47,\n          column: 4\n        },\n        end: {\n          line: 47,\n          column: 45\n        }\n      },\n      \"5\": {\n        start: {\n          line: 48,\n          column: 4\n        },\n        end: {\n          line: 48,\n          column: 47\n        }\n      },\n      \"6\": {\n        start: {\n          line: 49,\n          column: 4\n        },\n        end: {\n          line: 49,\n          column: 53\n        }\n      },\n      \"7\": {\n        start: {\n          line: 50,\n          column: 4\n        },\n        end: {\n          line: 50,\n          column: 35\n        }\n      },\n      \"8\": {\n        start: {\n          line: 52,\n          column: 31\n        },\n        end: {\n          line: 58,\n          column: 1\n        }\n      },\n      \"9\": {\n        start: {\n          line: 63,\n          column: 0\n        },\n        end: {\n          line: 67,\n          column: 58\n        }\n      },\n      \"10\": {\n        start: {\n          line: 64,\n          column: 4\n        },\n        end: {\n          line: 64,\n          column: 43\n        }\n      },\n      \"11\": {\n        start: {\n          line: 65,\n          column: 4\n        },\n        end: {\n          line: 65,\n          column: 55\n        }\n      },\n      \"12\": {\n        start: {\n          line: 66,\n          column: 4\n        },\n        end: {\n          line: 66,\n          column: 63\n        }\n      },\n      \"13\": {\n        start: {\n          line: 68,\n          column: 37\n        },\n        end: {\n          line: 72,\n          column: 1\n        }\n      },\n      \"14\": {\n        start: {\n          line: 73,\n          column: 35\n        },\n        end: {\n          line: 77,\n          column: 1\n        }\n      },\n      \"15\": {\n        start: {\n          line: 82,\n          column: 0\n        },\n        end: {\n          line: 87,\n          column: 82\n        }\n      },\n      \"16\": {\n        start: {\n          line: 83,\n          column: 4\n        },\n        end: {\n          line: 83,\n          column: 53\n        }\n      },\n      \"17\": {\n        start: {\n          line: 84,\n          column: 4\n        },\n        end: {\n          line: 84,\n          column: 79\n        }\n      },\n      \"18\": {\n        start: {\n          line: 85,\n          column: 4\n        },\n        end: {\n          line: 85,\n          column: 79\n        }\n      },\n      \"19\": {\n        start: {\n          line: 86,\n          column: 4\n        },\n        end: {\n          line: 86,\n          column: 83\n        }\n      },\n      \"20\": {\n        start: {\n          line: 88,\n          column: 51\n        },\n        end: {\n          line: 92,\n          column: 1\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 45,\n            column: 1\n          },\n          end: {\n            line: 45,\n            column: 2\n          }\n        },\n        loc: {\n          start: {\n            line: 45,\n            column: 26\n          },\n          end: {\n            line: 51,\n            column: 1\n          }\n        },\n        line: 45\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 63,\n            column: 1\n          },\n          end: {\n            line: 63,\n            column: 2\n          }\n        },\n        loc: {\n          start: {\n            line: 63,\n            column: 34\n          },\n          end: {\n            line: 67,\n            column: 1\n          }\n        },\n        line: 63\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 82,\n            column: 1\n          },\n          end: {\n            line: 82,\n            column: 2\n          }\n        },\n        loc: {\n          start: {\n            line: 82,\n            column: 46\n          },\n          end: {\n            line: 87,\n            column: 1\n          }\n        },\n        line: 82\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 51,\n            column: 3\n          },\n          end: {\n            line: 51,\n            column: 40\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 51,\n            column: 3\n          },\n          end: {\n            line: 51,\n            column: 16\n          }\n        }, {\n          start: {\n            line: 51,\n            column: 21\n          },\n          end: {\n            line: 51,\n            column: 39\n          }\n        }],\n        line: 51\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 67,\n            column: 3\n          },\n          end: {\n            line: 67,\n            column: 56\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 67,\n            column: 3\n          },\n          end: {\n            line: 67,\n            column: 24\n          }\n        }, {\n          start: {\n            line: 67,\n            column: 29\n          },\n          end: {\n            line: 67,\n            column: 55\n          }\n        }],\n        line: 67\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 87,\n            column: 3\n          },\n          end: {\n            line: 87,\n            column: 80\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 87,\n            column: 3\n          },\n          end: {\n            line: 87,\n            column: 36\n          }\n        }, {\n          start: {\n            line: 87,\n            column: 41\n          },\n          end: {\n            line: 87,\n            column: 79\n          }\n        }],\n        line: 87\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0,\n      \"20\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"NgxConfigObj.js\",\n      sourceRoot: \"\",\n      sources: [\"/Users/emanuele/Documents/PersonalProjects/frxjs-Ngx-Timeline/projects/ngx-timeline/src/lib/models/NgxConfigObj.ts\"],\n      names: [],\n      mappings: \"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\",\n      sourcesContent: [\"export const supportedLanguageCodes = ['en', 'it', 'fr', 'de', 'es'];\\n\\nexport interface NgxConfigDate {\\n  code: string;\\n  dayMonthYear: string;\\n  fullDate: string;\\n  hoursMinutes: string;\\n  monthYear: string;\\n  year: string;\\n}\\n\\nexport interface NgxDateObjMap {\\n  [key: string]: NgxConfigDate;\\n}\\n\\nexport const dateConfigMap: NgxDateObjMap = {\\n  en: {\\n    code: 'en-US',\\n    fullDate: 'MM/dd/yyyy h:mm a',\\n    dayMonthYear: 'dd MMMM yyyy',\\n    monthYear: 'MMMM yyyy',\\n    year: 'yyyy',\\n    hoursMinutes: 'hh:mm a',\\n  },\\n  it: {\\n    code: 'it-IT',\\n    fullDate: 'dd/MM/yyyy H:mm',\\n    dayMonthYear: 'dd MMMM yyyy',\\n    monthYear: 'MMMM yyyy',\\n    year: 'yyyy',\\n    hoursMinutes: 'HH:mm',\\n  },\\n  fr: {\\n    code: 'fr-FR',\\n    fullDate: 'dd/MM/yyyy H:mm',\\n    dayMonthYear: 'dd MMMM yyyy',\\n    monthYear: 'MMMM yyyy',\\n    year: 'yyyy',\\n    hoursMinutes: 'HH:mm',\\n  },\\n  de: {\\n    code: 'de',\\n    fullDate: 'dd/MM/yyyy H:mm',\\n    dayMonthYear: 'dd MMMM yyyy',\\n    monthYear: 'MMMM yyyy',\\n    year: 'yyyy',\\n    hoursMinutes: 'HH:mm',\\n  },\\n  es: {\\n    code: 'es',\\n    fullDate: 'dd/MM/yyyy H:mm',\\n    dayMonthYear: 'dd MMMM yyyy',\\n    monthYear: 'MMMM yyyy',\\n    year: 'yyyy',\\n    hoursMinutes: 'HH:mm',\\n  },\\n};\\n\\nexport enum NgxDateFormat {\\n  DAY_MONTH_YEAR = 'DAY_MONTH_YEAR',\\n  FULL_DATE = 'FULL_DATE',\\n  MONTH_YEAR = 'MONTH_YEAR',\\n  HOURS_MINUTES = 'HOURS_MINUTES',\\n  YEAR = 'YEAR'\\n}\\n\\nexport const fieldConfigDate = {\\n  MONTH_YEAR: 'monthYear',\\n  YEAR: 'year',\\n  HOURS_MINUTES: 'hoursMinutes',\\n  FULL_DATE: 'fullDate',\\n  DAY_MONTH_YEAR: 'dayMonthYear',\\n};\\n\\n/**\\n * Enum used to set the group event logic\\n */\\nexport enum NgxTimelineEventGroup {\\n  YEAR = 'YEAR',\\n  MONTH_YEAR = 'MONTH_YEAR',\\n  DAY_MONTH_YEAR = 'DAY_MONTH_YEAR'\\n}\\n\\nexport const fieldsToAddEventGroup = {\\n  YEAR: ['getFullYear'],\\n  MONTH_YEAR: ['getFullYear', 'getMonth'],\\n  DAY_MONTH_YEAR: ['getFullYear', 'getMonth', 'getDate'],\\n};\\n\\nexport const periodKeyDateFormat = {\\n  YEAR: NgxDateFormat.YEAR,\\n  MONTH_YEAR: NgxDateFormat.MONTH_YEAR,\\n  DAY_MONTH_YEAR: NgxDateFormat.DAY_MONTH_YEAR,\\n};\\n\\n/**\\n * Enum used to set the change side event logic\\n */\\nexport enum NgxTimelineEventChangeSideInGroup {\\n  ALL = 'ALL',\\n  ON_DIFFERENT_HMS = 'ON_DIFFERENT_HMS',\\n  ON_DIFFERENT_DAY = 'ON_DIFFERENT_DAY',\\n  ON_DIFFERENT_MONTH = 'ON_DIFFERENT_MONTH'\\n}\\n\\nexport const fieldsToCheckEventChangeSideInGroup = {\\n  ON_DIFFERENT_MONTH: ['getFullYear', 'getMonth'],\\n  ON_DIFFERENT_DAY: ['getFullYear', 'getMonth', 'getDate'],\\n  ON_DIFFERENT_HMS: ['getFullYear', 'getMonth', 'getDate', 'getHours', 'getMinutes', 'getSeconds'],\\n};\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"b18881cd59a3347dad01721dcbfe0123d2e976a7\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_27q2up6jkf = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_27q2up6jkf();\nexport const supportedLanguageCodes = (cov_27q2up6jkf().s[0]++, ['en', 'it', 'fr', 'de', 'es']);\nexport const dateConfigMap = (cov_27q2up6jkf().s[1]++, {\n  en: {\n    code: 'en-US',\n    fullDate: 'MM/dd/yyyy h:mm a',\n    dayMonthYear: 'dd MMMM yyyy',\n    monthYear: 'MMMM yyyy',\n    year: 'yyyy',\n    hoursMinutes: 'hh:mm a'\n  },\n  it: {\n    code: 'it-IT',\n    fullDate: 'dd/MM/yyyy H:mm',\n    dayMonthYear: 'dd MMMM yyyy',\n    monthYear: 'MMMM yyyy',\n    year: 'yyyy',\n    hoursMinutes: 'HH:mm'\n  },\n  fr: {\n    code: 'fr-FR',\n    fullDate: 'dd/MM/yyyy H:mm',\n    dayMonthYear: 'dd MMMM yyyy',\n    monthYear: 'MMMM yyyy',\n    year: 'yyyy',\n    hoursMinutes: 'HH:mm'\n  },\n  de: {\n    code: 'de',\n    fullDate: 'dd/MM/yyyy H:mm',\n    dayMonthYear: 'dd MMMM yyyy',\n    monthYear: 'MMMM yyyy',\n    year: 'yyyy',\n    hoursMinutes: 'HH:mm'\n  },\n  es: {\n    code: 'es',\n    fullDate: 'dd/MM/yyyy H:mm',\n    dayMonthYear: 'dd MMMM yyyy',\n    monthYear: 'MMMM yyyy',\n    year: 'yyyy',\n    hoursMinutes: 'HH:mm'\n  }\n});\nexport var NgxDateFormat;\ncov_27q2up6jkf().s[2]++;\n\n(function (NgxDateFormat) {\n  cov_27q2up6jkf().f[0]++;\n  cov_27q2up6jkf().s[3]++;\n  NgxDateFormat[\"DAY_MONTH_YEAR\"] = \"DAY_MONTH_YEAR\";\n  cov_27q2up6jkf().s[4]++;\n  NgxDateFormat[\"FULL_DATE\"] = \"FULL_DATE\";\n  cov_27q2up6jkf().s[5]++;\n  NgxDateFormat[\"MONTH_YEAR\"] = \"MONTH_YEAR\";\n  cov_27q2up6jkf().s[6]++;\n  NgxDateFormat[\"HOURS_MINUTES\"] = \"HOURS_MINUTES\";\n  cov_27q2up6jkf().s[7]++;\n  NgxDateFormat[\"YEAR\"] = \"YEAR\";\n})((cov_27q2up6jkf().b[0][0]++, NgxDateFormat) || (cov_27q2up6jkf().b[0][1]++, NgxDateFormat = {}));\n\nexport const fieldConfigDate = (cov_27q2up6jkf().s[8]++, {\n  MONTH_YEAR: 'monthYear',\n  YEAR: 'year',\n  HOURS_MINUTES: 'hoursMinutes',\n  FULL_DATE: 'fullDate',\n  DAY_MONTH_YEAR: 'dayMonthYear'\n});\n/**\n * Enum used to set the group event logic\n */\n\nexport var NgxTimelineEventGroup;\ncov_27q2up6jkf().s[9]++;\n\n(function (NgxTimelineEventGroup) {\n  cov_27q2up6jkf().f[1]++;\n  cov_27q2up6jkf().s[10]++;\n  NgxTimelineEventGroup[\"YEAR\"] = \"YEAR\";\n  cov_27q2up6jkf().s[11]++;\n  NgxTimelineEventGroup[\"MONTH_YEAR\"] = \"MONTH_YEAR\";\n  cov_27q2up6jkf().s[12]++;\n  NgxTimelineEventGroup[\"DAY_MONTH_YEAR\"] = \"DAY_MONTH_YEAR\";\n})((cov_27q2up6jkf().b[1][0]++, NgxTimelineEventGroup) || (cov_27q2up6jkf().b[1][1]++, NgxTimelineEventGroup = {}));\n\nexport const fieldsToAddEventGroup = (cov_27q2up6jkf().s[13]++, {\n  YEAR: ['getFullYear'],\n  MONTH_YEAR: ['getFullYear', 'getMonth'],\n  DAY_MONTH_YEAR: ['getFullYear', 'getMonth', 'getDate']\n});\nexport const periodKeyDateFormat = (cov_27q2up6jkf().s[14]++, {\n  YEAR: NgxDateFormat.YEAR,\n  MONTH_YEAR: NgxDateFormat.MONTH_YEAR,\n  DAY_MONTH_YEAR: NgxDateFormat.DAY_MONTH_YEAR\n});\n/**\n * Enum used to set the change side event logic\n */\n\nexport var NgxTimelineEventChangeSideInGroup;\ncov_27q2up6jkf().s[15]++;\n\n(function (NgxTimelineEventChangeSideInGroup) {\n  cov_27q2up6jkf().f[2]++;\n  cov_27q2up6jkf().s[16]++;\n  NgxTimelineEventChangeSideInGroup[\"ALL\"] = \"ALL\";\n  cov_27q2up6jkf().s[17]++;\n  NgxTimelineEventChangeSideInGroup[\"ON_DIFFERENT_HMS\"] = \"ON_DIFFERENT_HMS\";\n  cov_27q2up6jkf().s[18]++;\n  NgxTimelineEventChangeSideInGroup[\"ON_DIFFERENT_DAY\"] = \"ON_DIFFERENT_DAY\";\n  cov_27q2up6jkf().s[19]++;\n  NgxTimelineEventChangeSideInGroup[\"ON_DIFFERENT_MONTH\"] = \"ON_DIFFERENT_MONTH\";\n})((cov_27q2up6jkf().b[2][0]++, NgxTimelineEventChangeSideInGroup) || (cov_27q2up6jkf().b[2][1]++, NgxTimelineEventChangeSideInGroup = {}));\n\nexport const fieldsToCheckEventChangeSideInGroup = (cov_27q2up6jkf().s[20]++, {\n  ON_DIFFERENT_MONTH: ['getFullYear', 'getMonth'],\n  ON_DIFFERENT_DAY: ['getFullYear', 'getMonth', 'getDate'],\n  ON_DIFFERENT_HMS: ['getFullYear', 'getMonth', 'getDate', 'getHours', 'getMinutes', 'getSeconds']\n});","map":{"version":3,"sources":["/Users/emanuele/Documents/PersonalProjects/frxjs-Ngx-Timeline/projects/ngx-timeline/src/lib/models/NgxConfigObj.ts"],"names":["supportedLanguageCodes","dateConfigMap","en","code","fullDate","dayMonthYear","monthYear","year","hoursMinutes","it","fr","de","es","NgxDateFormat","fieldConfigDate","MONTH_YEAR","YEAR","HOURS_MINUTES","FULL_DATE","DAY_MONTH_YEAR","NgxTimelineEventGroup","fieldsToAddEventGroup","periodKeyDateFormat","NgxTimelineEventChangeSideInGroup","fieldsToCheckEventChangeSideInGroup","ON_DIFFERENT_MONTH","ON_DIFFERENT_DAY","ON_DIFFERENT_HMS"],"mappings":"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","sourcesContent":["export const supportedLanguageCodes = ['en', 'it', 'fr', 'de', 'es'];\nexport const dateConfigMap = {\n    en: {\n        code: 'en-US',\n        fullDate: 'MM/dd/yyyy h:mm a',\n        dayMonthYear: 'dd MMMM yyyy',\n        monthYear: 'MMMM yyyy',\n        year: 'yyyy',\n        hoursMinutes: 'hh:mm a',\n    },\n    it: {\n        code: 'it-IT',\n        fullDate: 'dd/MM/yyyy H:mm',\n        dayMonthYear: 'dd MMMM yyyy',\n        monthYear: 'MMMM yyyy',\n        year: 'yyyy',\n        hoursMinutes: 'HH:mm',\n    },\n    fr: {\n        code: 'fr-FR',\n        fullDate: 'dd/MM/yyyy H:mm',\n        dayMonthYear: 'dd MMMM yyyy',\n        monthYear: 'MMMM yyyy',\n        year: 'yyyy',\n        hoursMinutes: 'HH:mm',\n    },\n    de: {\n        code: 'de',\n        fullDate: 'dd/MM/yyyy H:mm',\n        dayMonthYear: 'dd MMMM yyyy',\n        monthYear: 'MMMM yyyy',\n        year: 'yyyy',\n        hoursMinutes: 'HH:mm',\n    },\n    es: {\n        code: 'es',\n        fullDate: 'dd/MM/yyyy H:mm',\n        dayMonthYear: 'dd MMMM yyyy',\n        monthYear: 'MMMM yyyy',\n        year: 'yyyy',\n        hoursMinutes: 'HH:mm',\n    },\n};\nexport var NgxDateFormat;\n(function (NgxDateFormat) {\n    NgxDateFormat[\"DAY_MONTH_YEAR\"] = \"DAY_MONTH_YEAR\";\n    NgxDateFormat[\"FULL_DATE\"] = \"FULL_DATE\";\n    NgxDateFormat[\"MONTH_YEAR\"] = \"MONTH_YEAR\";\n    NgxDateFormat[\"HOURS_MINUTES\"] = \"HOURS_MINUTES\";\n    NgxDateFormat[\"YEAR\"] = \"YEAR\";\n})(NgxDateFormat || (NgxDateFormat = {}));\nexport const fieldConfigDate = {\n    MONTH_YEAR: 'monthYear',\n    YEAR: 'year',\n    HOURS_MINUTES: 'hoursMinutes',\n    FULL_DATE: 'fullDate',\n    DAY_MONTH_YEAR: 'dayMonthYear',\n};\n/**\n * Enum used to set the group event logic\n */\nexport var NgxTimelineEventGroup;\n(function (NgxTimelineEventGroup) {\n    NgxTimelineEventGroup[\"YEAR\"] = \"YEAR\";\n    NgxTimelineEventGroup[\"MONTH_YEAR\"] = \"MONTH_YEAR\";\n    NgxTimelineEventGroup[\"DAY_MONTH_YEAR\"] = \"DAY_MONTH_YEAR\";\n})(NgxTimelineEventGroup || (NgxTimelineEventGroup = {}));\nexport const fieldsToAddEventGroup = {\n    YEAR: ['getFullYear'],\n    MONTH_YEAR: ['getFullYear', 'getMonth'],\n    DAY_MONTH_YEAR: ['getFullYear', 'getMonth', 'getDate'],\n};\nexport const periodKeyDateFormat = {\n    YEAR: NgxDateFormat.YEAR,\n    MONTH_YEAR: NgxDateFormat.MONTH_YEAR,\n    DAY_MONTH_YEAR: NgxDateFormat.DAY_MONTH_YEAR,\n};\n/**\n * Enum used to set the change side event logic\n */\nexport var NgxTimelineEventChangeSideInGroup;\n(function (NgxTimelineEventChangeSideInGroup) {\n    NgxTimelineEventChangeSideInGroup[\"ALL\"] = \"ALL\";\n    NgxTimelineEventChangeSideInGroup[\"ON_DIFFERENT_HMS\"] = \"ON_DIFFERENT_HMS\";\n    NgxTimelineEventChangeSideInGroup[\"ON_DIFFERENT_DAY\"] = \"ON_DIFFERENT_DAY\";\n    NgxTimelineEventChangeSideInGroup[\"ON_DIFFERENT_MONTH\"] = \"ON_DIFFERENT_MONTH\";\n})(NgxTimelineEventChangeSideInGroup || (NgxTimelineEventChangeSideInGroup = {}));\nexport const fieldsToCheckEventChangeSideInGroup = {\n    ON_DIFFERENT_MONTH: ['getFullYear', 'getMonth'],\n    ON_DIFFERENT_DAY: ['getFullYear', 'getMonth', 'getDate'],\n    ON_DIFFERENT_HMS: ['getFullYear', 'getMonth', 'getDate', 'getHours', 'getMinutes', 'getSeconds'],\n};\n"]},"metadata":{},"sourceType":"module"}